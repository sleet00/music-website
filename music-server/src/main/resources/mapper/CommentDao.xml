<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxc.music.dao.CommentDao">

    <resultMap type="com.hxc.music.entity.Comment" id="CommentMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="songId" column="song_id" jdbcType="VARCHAR"/>
        <result property="songListId" column="song_list_id" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="up" column="up" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CommentMap">
        select
          id, user_id, song_id, song_list_id, content, create_time, type, up
        from comment
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CommentMap">
        select
        id, user_id, song_id, song_list_id, content, create_time, type, up
        from comment
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="songId != null">
                and song_id = #{songId}
            </if>
            <if test="songListId != null">
                and song_list_id = #{songListId}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="up != null">
                and up = #{up}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from comment
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="songId != null">
                and song_id = #{songId}
            </if>
            <if test="songListId != null">
                and song_list_id = #{songListId}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="up != null">
                and up = #{up}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into comment(user_id, song_id, song_list_id, content, create_time, type, up)
        values (#{userId}, #{songId}, #{songListId}, #{content}, #{createTime}, #{type}, #{up})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into comment(user_id, song_id, song_list_id, content, create_time, type, up)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.songId}, #{entity.songListId}, #{entity.content}, #{entity.createTime},
            #{entity.type}, #{entity.up})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into comment(user_id, song_id, song_list_id, content, create_time, type, up)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.songId}, #{entity.songListId}, #{entity.content}, #{entity.createTime},
            #{entity.type}, #{entity.up})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        song_id = values(song_id),
        song_list_id = values(song_list_id),
        content = values(content),
        create_time = values(create_time),
        type = values(type),
        up = values(up)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update comment
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="songId != null">
                song_id = #{songId},
            </if>
            <if test="songListId != null">
                song_list_id = #{songListId},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="up != null">
                up = #{up},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from comment where id = #{id}
    </delete>

</mapper>

