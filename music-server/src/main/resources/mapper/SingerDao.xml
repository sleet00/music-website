<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hxc.music.dao.SingerDao">

    <resultMap type="com.hxc.music.entity.Singer" id="SingerMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="TINYINT"/>
        <result property="pic" column="pic" jdbcType="VARCHAR"/>
        <result property="birth" column="birth" jdbcType="TIMESTAMP"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="introduction" column="introduction" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="Base_Column_List">
        id,name,sex,pic,birth,location,introduction
    </select>
    <select id="selectByPrimaryKey" resultType="com.hxc.music.entity.Singer">
        <include refid="Base_Column_List"/>
        from singer
        where id = {id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into singer(name, sex, pic, birth, location, introduction)
        values (#{name}, #{sex}, #{pic}, #{birth}, #{location}, #{introduction})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update singer
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="pic != null and pic != ''">
                pic = #{pic},
            </if>
            <if test="birth != null">
                birth = #{birth},
            </if>
            <if test="location != null and location != ''">
                location = #{location},
            </if>
            <if test="introduction != null and introduction != ''">
                introduction = #{introduction},
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="allSinger" resultType="com.hxc.music.entity.Singer">
        select
        <include refid="Base_Column_List"/>
        from singer
    </select>
    <select id="singerOfName" resultType="com.hxc.music.entity.Singer">
        select
        <include refid="Base_Column_List"/>
        from singer
        where name like #{name}
    </select>
    <select id="singerOfSex" resultType="com.hxc.music.entity.Singer">
        select
        <include refid="Base_Column_List"/>
        from singer
        where sex = {sex}
    </select>


    <delete id="delete">
        delete from singer
        where id = {id}
    </delete>

</mapper>

